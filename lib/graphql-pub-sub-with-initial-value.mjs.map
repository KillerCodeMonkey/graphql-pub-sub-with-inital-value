{"version":3,"file":"graphql-pub-sub-with-initial-value.mjs","sources":["../src/index.ts"],"sourcesContent":["import { PubSub } from 'graphql-subscriptions'\n\nexport interface AsyncIterableIteratorWithInitialState<T> extends AsyncIterableIterator<T> {\n  initialValuePushed: boolean\n}\n\nexport const withCancel = <T, P>(\n  asyncIterator: AsyncIterator<T | undefined>,\n  onCancel: (args?: P) => void,\n  args?: P\n): AsyncIterator<T | undefined> => {\n  if (!asyncIterator.return) {\n    asyncIterator.return = () => Promise.resolve({\n      done: true,\n      value: undefined\n    })\n  }\n\n  const savedReturn = asyncIterator.return.bind(asyncIterator)\n  asyncIterator.return = () => {\n    onCancel(args)\n    return savedReturn()\n  }\n\n  return asyncIterator\n}\n\nexport class PubSubWithIntialValue extends PubSub {\n  private withInitialValue<T>(iterator: AsyncIterator<T>, getInitialValue: () => Promise<T>): AsyncIterableIteratorWithInitialState<T> {\n    return {\n      [Symbol.asyncIterator](): AsyncIterableIterator<T> { return this },\n      initialValuePushed: false,\n      next(value?: any): Promise<IteratorResult<T>> {\n        if (this.initialValuePushed) {\n          return iterator.next(value).then(({ value, done }: IteratorResult<T>): IteratorResult<T> => ({\n            done,\n            value\n          }))\n        } else {\n          return getInitialValue().then((value: T): IteratorResult<T> => {\n            this.initialValuePushed = true\n            return { done: false, value }\n          })\n        }\n      },\n      return(value?: any): Promise<IteratorResult<T>> {\n        return iterator.return!(value)\n      },\n      throw(value?: any): Promise<IteratorResult<T>> {\n        return iterator.throw!(value)\n      }\n    }\n  }\n\n  public asyncIteratorWithInitialValue<T>(topic: string | string[], initialValueFn: () => Promise<T>): AsyncIterableIteratorWithInitialState<T> {\n    return this.withInitialValue(this.asyncIterator<T>(topic), (): Promise<T> => initialValueFn())\n  }\n\n  public withCancel<T, P>(asyncIterator: AsyncIterator<T | undefined>, onCancel: (args?: P) => void, args?: P): AsyncIterator<T, any, undefined> {\n    return withCancel<T, P>(asyncIterator, onCancel, args)\n  }\n}\n"],"names":["withCancel","asyncIterator","onCancel","args","Promise","resolve","done","value","undefined","savedReturn","bind","PubSubWithIntialValue","withInitialValue","iterator","getInitialValue","Symbol","initialValuePushed","next","this","then","_this","asyncIteratorWithInitialValue","topic","initialValueFn","PubSub"],"mappings":"+CAMaA,IAAAA,EAAa,SACxBC,EACAC,EACAC,GAEKF,WACHA,SAAuB,kBAAMG,QAAQC,QAAQ,CAC3CC,MAAM,EACNC,WAAOC,MAIX,IAAMC,EAAcR,SAAqBS,KAAKT,GAM9C,OALAA,SAAuB,WAErB,OADAC,EAASC,GACFM,KAGFR,GAGIU,0LACHC,iBAAA,SAAoBC,EAA4BC,SACtD,aACGC,OAAOd,0BAA6C,eACrDe,oBAAoB,IACpBC,cAAKV,cACH,OAAIW,KAAKF,mBACAH,EAASI,KAAKV,GAAOY,KAAK,kBAA4D,CAC3Fb,OADyCA,KAEzCC,QAFkCA,SAK7BO,IAAkBK,KAAK,SAACZ,GAE7B,OADAa,EAAKJ,oBAAqB,EACnB,CAAEV,MAAM,EAAOC,MAAAA,wBAIrBA,GACL,OAAOM,SAAiBN,qBAEpBA,GACJ,OAAOM,QAAgBN,SAKtBc,8BAAA,SAAiCC,EAA0BC,GAChE,YAAYX,iBAAiBM,KAAKjB,cAAiBqB,GAAQ,kBAAkBC,SAGxEvB,WAAA,SAAiBC,EAA6CC,EAA8BC,GACjG,OAAOH,EAAiBC,EAAeC,EAAUC,OAhCVqB"}